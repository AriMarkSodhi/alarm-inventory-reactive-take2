# how many instances of nginx to run
worker_processes  1;

events {
  # how many connections can be processed at one time by the worker
  worker_connections  1024;
}

http {
  # 127.0.0.11 is Docker embedded DNS server
  resolver 127.0.0.11 ipv6=off valid=10s;

  upstream alarminvrest {
    #    round robin
    #    least_conn;
    #    Need a distributed load balancer - understand load and request/rate per server
    hash $remote_addr$remote_port consistent;

    server alarminvrest:8090;
  }

  upstream resourceinvrest {
    #    round robin
    #    least_conn;
    #    Need a distributed load balancer - understand load and request/rate per server
    hash $remote_addr$remote_port consistent;

    server resourceinvrest:8090;
  }

  log_format compression '$remote_addr - $remote_user [$time_local] '
  '"$request" $status $upstream_addr '
  '"$http_referer" "$http_user_agent"';

  error_log /etc/nginx/error_log.log debug;
  access_log /var/log/nginx/access.log compression;
#  pid        /var/run/nginx.pid;

  limit_req_zone $binary_remote_addr zone=perip:10m rate=5r/s;
  server {
    # need to include ssl cert
    #  ssl_protocols TLSv1.1 TLSv1.2;

    # listen on port 80
    listen 80;
    # listen 443 ssl;

    proxy_redirect   off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;

    location /alarminventory/ {
      # need to limit overall deployment as well
      limit_req zone=perip burst=12 delay=8;

      limit_req_status 429;
      # replace with appropriate url
      proxy_pass http://alarminvrest;
      rewrite ^/alarminvrest/?(.*)$ /$1 break;
    }

    location /resourceinventory/ {
      # need to limit overall deployment as well
      limit_req zone=perip burst=12 delay=8;

      limit_req_status 429;
      # replace with appropriate url
      proxy_pass http://resourceinvrest;
      rewrite ^/resourceinvrest/?(.*)$ /$1 break;
    }
  }
}